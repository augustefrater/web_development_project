# Generated by Django 5.1.3 on 2025-04-10 21:42

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Unique name for the collection (e.g., Building-A, Model-53A).', max_length=100, unique=True, validators=[django.core.validators.RegexValidator(message='Collection name must contain only letters, numbers, or hyphens.', regex='^[A-Za-z0-9\\-]+$')])),
                ('description', models.TextField(blank=True, help_text='Optional description for the collection.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FaultCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Open', 'Open'), ('Resolved', 'Resolved')], db_index=True, default='Open', help_text='Current status of the fault case.', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, help_text='Timestamp when the fault case was marked as resolved.', null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fault_cases_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FaultComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.TextField(help_text='The comment text.')),
                ('commented_at', models.DateTimeField(auto_now_add=True)),
                ('fault_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='myapp.faultcase')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fault_comments_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['commented_at'],
            },
        ),
        migrations.CreateModel(
            name='FaultNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_text', models.TextField(help_text='Content of the note.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fault_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='myapp.faultcase')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fault_notes_added', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='FaultNoteImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Image file related to the fault note.', upload_to='fault_images/%Y/%m/%d/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('fault_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='myapp.faultnote')),
            ],
            options={
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('machine_id', models.CharField(help_text='Unique 12-character identifier for the machine.', max_length=12, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Human-readable name of the machine.', max_length=100)),
                ('status', models.CharField(choices=[('OK', 'OK'), ('Warning', 'Warning'), ('Fault', 'Fault')], db_index=True, default='OK', help_text='Current operational status of the machine.', max_length=10)),
                ('importance_level', models.IntegerField(default=1, help_text='Importance level (1-5), used for prioritization.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('collections', models.ManyToManyField(blank=True, help_text='Collections this machine belongs to.', related_name='machines', to='myapp.collection')),
            ],
            options={
                'ordering': ['-importance_level', 'name'],
            },
        ),
        migrations.AddField(
            model_name='faultcase',
            name='machine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fault_cases', to='myapp.machine'),
        ),
        migrations.CreateModel(
            name='Warning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warning_text', models.TextField(help_text='Description of the warning.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Is this warning currently active?')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='warnings_created', to=settings.AUTH_USER_MODEL)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warnings', to='myapp.machine')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MachineAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_role', models.CharField(choices=[('Technician', 'Technician'), ('Repair', 'Repair')], help_text='Role assigned to the user for this specific machine.', max_length=10)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assignments_made', to=settings.AUTH_USER_MODEL)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='myapp.machine')),
                ('user', models.ForeignKey(limit_choices_to={'groups__name__in': ['Technician', 'Repair']}, on_delete=django.db.models.deletion.CASCADE, related_name='machine_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['assigned_at'],
                'unique_together': {('machine', 'user')},
            },
        ),
    ]
